{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\Desktop\\\\sjsu-marketplace\\\\frontend\\\\src\\\\pages\\\\Messages.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Container, Box, Typography, Paper, Grid, TextField, List, ListItem, ListItemText, ListItemAvatar, Avatar, Divider, IconButton } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useSelector } from 'react-redux';\nimport { messages } from '../services/api';\nimport Layout from '../components/Layout';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messageList, setMessageList] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n  useEffect(() => {\n    if (selectedConversation) {\n      fetchMessages(selectedConversation.user.id);\n    }\n  }, [selectedConversation]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messageList]);\n  const fetchConversations = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await messages.getConversations();\n      setConversations(response);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch conversations');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchMessages = async userId => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await messages.getConversation(userId);\n      setMessageList(response);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch messages');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!selectedConversation || !newMessage.trim()) return;\n    try {\n      const message = await messages.send({\n        receiverId: selectedConversation.user.id,\n        content: newMessage\n      });\n      setMessageList(prev => [...prev, message]);\n      setNewMessage('');\n      fetchConversations();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to send message');\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  if (loading && !selectedConversation) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Loading conversations...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          height: 'calc(100vh - 200px)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              height: '100%',\n              overflow: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  selected: (selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.user.id) === conversation.user.id,\n                  onClick: () => setSelectedConversation(conversation),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      src: conversation.user.profileImage,\n                      children: conversation.user.name[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: conversation.user.name,\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      noWrap: true,\n                      children: conversation.lastMessage.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this), conversation.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      backgroundColor: 'primary.main',\n                      color: 'white',\n                      borderRadius: '50%',\n                      width: 24,\n                      height: 24,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontSize: '0.75rem'\n                    },\n                    children: conversation.unreadCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this)]\n              }, conversation.user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: selectedConversation.user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: 1,\n                  overflow: 'auto',\n                  p: 2,\n                  display: 'flex',\n                  flexDirection: 'column'\n                },\n                children: [messageList.map(message => /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: message.sender.id === (user === null || user === void 0 ? void 0 : user.id) ? 'flex-end' : 'flex-start',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      maxWidth: '70%',\n                      backgroundColor: message.sender.id === (user === null || user === void 0 ? void 0 : user.id) ? 'primary.main' : 'grey.200',\n                      color: message.sender.id === (user === null || user === void 0 ? void 0 : user.id) ? 'white' : 'text.primary',\n                      borderRadius: 2,\n                      p: 1.5\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: message.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mt: 0.5,\n                        opacity: 0.7\n                      },\n                      children: new Date(message.createdAt).toLocaleTimeString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this)\n                }, message.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: messagesEndRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  borderTop: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      multiline: true,\n                      maxRows: 4,\n                      value: newMessage,\n                      onChange: e => setNewMessage(e.target.value),\n                      onKeyPress: handleKeyPress,\n                      placeholder: \"Type a message...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"primary\",\n                      onClick: handleSendMessage,\n                      disabled: !newMessage.trim(),\n                      children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"text.secondary\",\n                children: \"Select a conversation to start messaging\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"2t2xVcOtitRM4olvcZLQ/bN8DRI=\", false, function () {\n  return [useSelector];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Container","Box","Typography","Paper","Grid","TextField","List","ListItem","ListItemText","ListItemAvatar","Avatar","Divider","IconButton","SendIcon","useSelector","messages","Layout","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","user","state","auth","conversations","setConversations","selectedConversation","setSelectedConversation","messageList","setMessageList","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","fetchConversations","fetchMessages","id","scrollToBottom","response","getConversations","err","Error","message","userId","getConversation","handleSendMessage","trim","send","receiverId","content","prev","_messagesEndRef$curre","current","scrollIntoView","behavior","handleKeyPress","event","key","shiftKey","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","color","maxWidth","container","spacing","sx","height","item","xs","md","elevation","overflow","map","conversation","button","selected","onClick","src","profileImage","name","primary","secondary","variant","noWrap","lastMessage","unreadCount","backgroundColor","borderRadius","width","display","alignItems","justifyContent","fontSize","flexDirection","p","borderBottom","borderColor","flex","sender","mb","mt","opacity","Date","createdAt","toLocaleTimeString","ref","borderTop","fullWidth","multiline","maxRows","value","onChange","e","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Sean/Desktop/sjsu-marketplace/frontend/src/pages/Messages.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Divider,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { messages } from '../services/api';\r\nimport Layout from '../components/Layout';\r\nimport { Message, User } from '../types';\r\n\r\ninterface Conversation {\r\n  user: User;\r\n  lastMessage: Message;\r\n  unreadCount: number;\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [conversations, setConversations] = useState<Conversation[]>([]);\r\n  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);\r\n  const [messageList, setMessageList] = useState<Message[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedConversation) {\r\n      fetchMessages(selectedConversation.user.id);\r\n    }\r\n  }, [selectedConversation]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messageList]);\r\n\r\n  const fetchConversations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await messages.getConversations();\r\n      setConversations(response);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch conversations');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (userId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await messages.getConversation(userId);\r\n      setMessageList(response);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch messages');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!selectedConversation || !newMessage.trim()) return;\r\n\r\n    try {\r\n      const message = await messages.send({\r\n        receiverId: selectedConversation.user.id,\r\n        content: newMessage,\r\n      });\r\n      setMessageList((prev) => [...prev, message]);\r\n      setNewMessage('');\r\n      fetchConversations();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to send message');\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  if (loading && !selectedConversation) {\r\n    return (\r\n      <Layout>\r\n        <Container>\r\n          <Typography>Loading conversations...</Typography>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Layout>\r\n        <Container>\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3} sx={{ height: 'calc(100vh - 200px)' }}>\r\n          {/* Conversations List */}\r\n          <Grid item xs={12} md={4}>\r\n            <Paper elevation={3} sx={{ height: '100%', overflow: 'auto' }}>\r\n              <List>\r\n                {conversations.map((conversation) => (\r\n                  <React.Fragment key={conversation.user.id}>\r\n                    <ListItem\r\n                      button\r\n                      selected={selectedConversation?.user.id === conversation.user.id}\r\n                      onClick={() => setSelectedConversation(conversation)}\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar src={conversation.user.profileImage}>\r\n                          {conversation.user.name[0]}\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={conversation.user.name}\r\n                        secondary={\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                            noWrap\r\n                          >\r\n                            {conversation.lastMessage.content}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                      {conversation.unreadCount > 0 && (\r\n                        <Box\r\n                          sx={{\r\n                            backgroundColor: 'primary.main',\r\n                            color: 'white',\r\n                            borderRadius: '50%',\r\n                            width: 24,\r\n                            height: 24,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            fontSize: '0.75rem',\r\n                          }}\r\n                        >\r\n                          {conversation.unreadCount}\r\n                        </Box>\r\n                      )}\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </React.Fragment>\r\n                ))}\r\n              </List>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          {/* Chat Interface */}\r\n          <Grid item xs={12} md={8}>\r\n            <Paper elevation={3} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n              {selectedConversation ? (\r\n                <>\r\n                  <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Typography variant=\"h6\">\r\n                      {selectedConversation.user.name}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      flex: 1,\r\n                      overflow: 'auto',\r\n                      p: 2,\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                    }}\r\n                  >\r\n                    {messageList.map((message) => (\r\n                      <Box\r\n                        key={message.id}\r\n                        sx={{\r\n                          display: 'flex',\r\n                          justifyContent:\r\n                            message.sender.id === user?.id\r\n                              ? 'flex-end'\r\n                              : 'flex-start',\r\n                          mb: 2,\r\n                        }}\r\n                      >\r\n                        <Box\r\n                          sx={{\r\n                            maxWidth: '70%',\r\n                            backgroundColor:\r\n                              message.sender.id === user?.id\r\n                                ? 'primary.main'\r\n                                : 'grey.200',\r\n                            color:\r\n                              message.sender.id === user?.id\r\n                                ? 'white'\r\n                                : 'text.primary',\r\n                            borderRadius: 2,\r\n                            p: 1.5,\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body1\">\r\n                            {message.content}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            sx={{\r\n                              display: 'block',\r\n                              mt: 0.5,\r\n                              opacity: 0.7,\r\n                            }}\r\n                          >\r\n                            {new Date(message.createdAt).toLocaleTimeString()}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    ))}\r\n                    <div ref={messagesEndRef} />\r\n                  </Box>\r\n                  <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs>\r\n                        <TextField\r\n                          fullWidth\r\n                          multiline\r\n                          maxRows={4}\r\n                          value={newMessage}\r\n                          onChange={(e) => setNewMessage(e.target.value)}\r\n                          onKeyPress={handleKeyPress}\r\n                          placeholder=\"Type a message...\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          onClick={handleSendMessage}\r\n                          disabled={!newMessage.trim()}\r\n                        >\r\n                          <SendIcon />\r\n                        </IconButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </>\r\n              ) : (\r\n                <Box\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <Typography color=\"text.secondary\">\r\n                    Select a conversation to start messaging\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Messages; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}