{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  currentListing: null,\n  userListings: [],\n  totalElements: 0,\n  loading: false,\n  error: null\n};\nconst listingsSlice = createSlice({\n  name: 'listings',\n  initialState,\n  reducers: {\n    fetchListingsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchListingsSuccess: (state, action) => {\n      state.loading = false;\n      state.items = action.payload.content;\n      state.totalElements = action.payload.totalElements;\n    },\n    fetchListingsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    setCurrentListing: (state, action) => {\n      state.currentListing = action.payload;\n    },\n    clearCurrentListing: state => {\n      state.currentListing = null;\n    },\n    fetchUserListingsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchUserListingsSuccess: (state, action) => {\n      state.loading = false;\n      state.userListings = action.payload.content;\n    },\n    fetchUserListingsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    createListingStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    createListingSuccess: (state, action) => {\n      state.loading = false;\n      state.items.unshift(action.payload);\n      state.userListings.unshift(action.payload);\n    },\n    createListingFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateListingStatusStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    updateListingStatusSuccess: (state, action) => {\n      var _state$currentListing;\n      state.loading = false;\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      if (index !== -1) {\n        state.items[index] = action.payload;\n      }\n      if (((_state$currentListing = state.currentListing) === null || _state$currentListing === void 0 ? void 0 : _state$currentListing.id) === action.payload.id) {\n        state.currentListing = action.payload;\n      }\n    },\n    updateListingStatusFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    deleteListingStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    deleteListingSuccess: (state, action) => {\n      var _state$currentListing2;\n      state.loading = false;\n      state.items = state.items.filter(item => item.id !== action.payload);\n      state.userListings = state.userListings.filter(item => item.id !== action.payload);\n      if (((_state$currentListing2 = state.currentListing) === null || _state$currentListing2 === void 0 ? void 0 : _state$currentListing2.id) === action.payload) {\n        state.currentListing = null;\n      }\n    },\n    deleteListingFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  fetchListingsStart,\n  fetchListingsSuccess,\n  fetchListingsFailure,\n  setCurrentListing,\n  clearCurrentListing,\n  fetchUserListingsStart,\n  fetchUserListingsSuccess,\n  fetchUserListingsFailure,\n  createListingStart,\n  createListingSuccess,\n  createListingFailure,\n  updateListingStatusStart,\n  updateListingStatusSuccess,\n  updateListingStatusFailure,\n  deleteListingStart,\n  deleteListingSuccess,\n  deleteListingFailure\n} = listingsSlice.actions;\nexport default listingsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","currentListing","userListings","totalElements","loading","error","listingsSlice","name","reducers","fetchListingsStart","state","fetchListingsSuccess","action","payload","content","fetchListingsFailure","setCurrentListing","clearCurrentListing","fetchUserListingsStart","fetchUserListingsSuccess","fetchUserListingsFailure","createListingStart","createListingSuccess","unshift","createListingFailure","updateListingStatusStart","updateListingStatusSuccess","_state$currentListing","index","findIndex","item","id","updateListingStatusFailure","deleteListingStart","deleteListingSuccess","_state$currentListing2","filter","deleteListingFailure","actions","reducer"],"sources":["C:/Users/Sean/Desktop/sjsu-marketplace/frontend/src/store/slices/listingsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Listing } from '../../types';\r\nimport { listings } from '../../services/api';\r\n\r\ninterface ListingsState {\r\n    items: Listing[];\r\n    currentListing: Listing | null;\r\n    userListings: Listing[];\r\n    totalElements: number;\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\nconst initialState: ListingsState = {\r\n    items: [],\r\n    currentListing: null,\r\n    userListings: [],\r\n    totalElements: 0,\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\nconst listingsSlice = createSlice({\r\n    name: 'listings',\r\n    initialState,\r\n    reducers: {\r\n        fetchListingsStart: (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        },\r\n        fetchListingsSuccess: (state, action: PayloadAction<{ content: Listing[]; totalElements: number }>) => {\r\n            state.loading = false;\r\n            state.items = action.payload.content;\r\n            state.totalElements = action.payload.totalElements;\r\n        },\r\n        fetchListingsFailure: (state, action: PayloadAction<string>) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        setCurrentListing: (state, action: PayloadAction<Listing>) => {\r\n            state.currentListing = action.payload;\r\n        },\r\n        clearCurrentListing: (state) => {\r\n            state.currentListing = null;\r\n        },\r\n        fetchUserListingsStart: (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        },\r\n        fetchUserListingsSuccess: (state, action: PayloadAction<{ content: Listing[]; totalElements: number }>) => {\r\n            state.loading = false;\r\n            state.userListings = action.payload.content;\r\n        },\r\n        fetchUserListingsFailure: (state, action: PayloadAction<string>) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        createListingStart: (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        },\r\n        createListingSuccess: (state, action: PayloadAction<Listing>) => {\r\n            state.loading = false;\r\n            state.items.unshift(action.payload);\r\n            state.userListings.unshift(action.payload);\r\n        },\r\n        createListingFailure: (state, action: PayloadAction<string>) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        updateListingStatusStart: (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        },\r\n        updateListingStatusSuccess: (state, action: PayloadAction<Listing>) => {\r\n            state.loading = false;\r\n            const index = state.items.findIndex(item => item.id === action.payload.id);\r\n            if (index !== -1) {\r\n                state.items[index] = action.payload;\r\n            }\r\n            if (state.currentListing?.id === action.payload.id) {\r\n                state.currentListing = action.payload;\r\n            }\r\n        },\r\n        updateListingStatusFailure: (state, action: PayloadAction<string>) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        deleteListingStart: (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        },\r\n        deleteListingSuccess: (state, action: PayloadAction<number>) => {\r\n            state.loading = false;\r\n            state.items = state.items.filter(item => item.id !== action.payload);\r\n            state.userListings = state.userListings.filter(item => item.id !== action.payload);\r\n            if (state.currentListing?.id === action.payload) {\r\n                state.currentListing = null;\r\n            }\r\n        },\r\n        deleteListingFailure: (state, action: PayloadAction<string>) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    fetchListingsStart,\r\n    fetchListingsSuccess,\r\n    fetchListingsFailure,\r\n    setCurrentListing,\r\n    clearCurrentListing,\r\n    fetchUserListingsStart,\r\n    fetchUserListingsSuccess,\r\n    fetchUserListingsFailure,\r\n    createListingStart,\r\n    createListingSuccess,\r\n    createListingFailure,\r\n    updateListingStatusStart,\r\n    updateListingStatusSuccess,\r\n    updateListingStatusFailure,\r\n    deleteListingStart,\r\n    deleteListingSuccess,\r\n    deleteListingFailure,\r\n} = listingsSlice.actions;\r\n\r\nexport default listingsSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}