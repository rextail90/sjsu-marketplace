{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth endpoints\nexport const auth = {\n  register: async userData => {\n    await api.post('/auth/register', userData);\n  },\n  login: async (username, password) => {\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  }\n};\n\n// Listing endpoints\nexport const listings = {\n  create: async listingData => {\n    const response = await api.post('/listings', listingData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  getAll: async (page = 0, size = 10) => {\n    const response = await api.get(`/listings?page=${page}&size=${size}`);\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/listings/${id}`);\n    return response.data;\n  },\n  search: async (keyword, page = 0, size = 10) => {\n    const response = await api.get(`/listings/search?keyword=${keyword}&page=${page}&size=${size}`);\n    return response.data;\n  },\n  getByCategory: async (category, page = 0, size = 10) => {\n    const response = await api.get(`/listings/category/${category}?page=${page}&size=${size}`);\n    return response.data;\n  },\n  getUserListings: async (page = 0, size = 10) => {\n    const response = await api.get(`/listings/user?page=${page}&size=${size}`);\n    return response.data;\n  },\n  updateStatus: async (id, status) => {\n    const response = await api.put(`/listings/${id}/status?status=${status}`);\n    return response.data;\n  },\n  delete: async id => {\n    await api.delete(`/listings/${id}`);\n  }\n};\n\n// Message endpoints\nexport const messages = {\n  send: async (receiverId, content, listingId) => {\n    const response = await api.post('/messages', {\n      receiverId,\n      content,\n      listingId\n    });\n    return response.data;\n  },\n  getAll: async (page = 0, size = 20) => {\n    const response = await api.get(`/messages?page=${page}&size=${size}`);\n    return response.data;\n  },\n  getConversation: async userId => {\n    const response = await api.get(`/messages/conversation/${userId}`);\n    return response.data;\n  },\n  markAsRead: async messageId => {\n    await api.put(`/messages/${messageId}/read`);\n  },\n  getUnreadCount: async () => {\n    const response = await api.get('/messages/unread/count');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","auth","register","userData","post","login","username","password","response","setItem","data","logout","removeItem","listings","listingData","getAll","page","size","get","getById","id","search","keyword","getByCategory","category","getUserListings","updateStatus","status","put","delete","messages","send","receiverId","content","listingId","getConversation","userId","markAsRead","messageId","getUnreadCount"],"sources":["C:/Users/Sean/Desktop/sjsu-marketplace/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { AuthResponse, Listing, Message, User } from '../types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\n// Auth endpoints\r\nexport const auth = {\r\n    register: async (userData: Partial<User>): Promise<void> => {\r\n        await api.post('/auth/register', userData);\r\n    },\r\n    login: async (username: string, password: string): Promise<AuthResponse> => {\r\n        const response = await api.post<AuthResponse>('/auth/login', { username, password });\r\n        localStorage.setItem('token', response.data.token);\r\n        return response.data;\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('token');\r\n    },\r\n};\r\n\r\n// Listing endpoints\r\nexport const listings = {\r\n    create: async (listingData: FormData): Promise<Listing> => {\r\n        const response = await api.post<Listing>('/listings', listingData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    },\r\n    getAll: async (page = 0, size = 10): Promise<{ content: Listing[]; totalElements: number }> => {\r\n        const response = await api.get(`/listings?page=${page}&size=${size}`);\r\n        return response.data;\r\n    },\r\n    getById: async (id: number): Promise<Listing> => {\r\n        const response = await api.get<Listing>(`/listings/${id}`);\r\n        return response.data;\r\n    },\r\n    search: async (keyword: string, page = 0, size = 10): Promise<{ content: Listing[]; totalElements: number }> => {\r\n        const response = await api.get(`/listings/search?keyword=${keyword}&page=${page}&size=${size}`);\r\n        return response.data;\r\n    },\r\n    getByCategory: async (category: string, page = 0, size = 10): Promise<{ content: Listing[]; totalElements: number }> => {\r\n        const response = await api.get(`/listings/category/${category}?page=${page}&size=${size}`);\r\n        return response.data;\r\n    },\r\n    getUserListings: async (page = 0, size = 10): Promise<{ content: Listing[]; totalElements: number }> => {\r\n        const response = await api.get(`/listings/user?page=${page}&size=${size}`);\r\n        return response.data;\r\n    },\r\n    updateStatus: async (id: number, status: string): Promise<Listing> => {\r\n        const response = await api.put<Listing>(`/listings/${id}/status?status=${status}`);\r\n        return response.data;\r\n    },\r\n    delete: async (id: number): Promise<void> => {\r\n        await api.delete(`/listings/${id}`);\r\n    },\r\n};\r\n\r\n// Message endpoints\r\nexport const messages = {\r\n    send: async (receiverId: number, content: string, listingId?: number): Promise<Message> => {\r\n        const response = await api.post<Message>('/messages', {\r\n            receiverId,\r\n            content,\r\n            listingId,\r\n        });\r\n        return response.data;\r\n    },\r\n    getAll: async (page = 0, size = 20): Promise<{ content: Message[]; totalElements: number }> => {\r\n        const response = await api.get(`/messages?page=${page}&size=${size}`);\r\n        return response.data;\r\n    },\r\n    getConversation: async (userId: number): Promise<Message[]> => {\r\n        const response = await api.get<Message[]>(`/messages/conversation/${userId}`);\r\n        return response.data;\r\n    },\r\n    markAsRead: async (messageId: number): Promise<void> => {\r\n        await api.put(`/messages/${messageId}/read`);\r\n    },\r\n    getUnreadCount: async (): Promise<number> => {\r\n        const response = await api.get<number>('/messages/unread/count');\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACrBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,IAAI,GAAG;EAChBC,QAAQ,EAAE,MAAOC,QAAuB,IAAoB;IACxD,MAAMd,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC9C,CAAC;EACDE,KAAK,EAAE,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAA4B;IACxE,MAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACe,IAAI,CAAe,aAAa,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACpFT,YAAY,CAACW,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACE,IAAI,CAACb,KAAK,CAAC;IAClD,OAAOW,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDC,MAAM,EAAEA,CAAA,KAAM;IACVb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;EACpC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG;EACpBvB,MAAM,EAAE,MAAOwB,WAAqB,IAAuB;IACvD,MAAMN,QAAQ,GAAG,MAAMnB,GAAG,CAACe,IAAI,CAAU,WAAW,EAAEU,WAAW,EAAE;MAC/DtB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOgB,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDK,MAAM,EAAE,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAA6D;IAC3F,MAAMT,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAC,kBAAkBF,IAAI,SAASC,IAAI,EAAE,CAAC;IACrE,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDS,OAAO,EAAE,MAAOC,EAAU,IAAuB;IAC7C,MAAMZ,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAU,aAAaE,EAAE,EAAE,CAAC;IAC1D,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDW,MAAM,EAAE,MAAAA,CAAOC,OAAe,EAAEN,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAA6D;IAC5G,MAAMT,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAC,4BAA4BI,OAAO,SAASN,IAAI,SAASC,IAAI,EAAE,CAAC;IAC/F,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDa,aAAa,EAAE,MAAAA,CAAOC,QAAgB,EAAER,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAA6D;IACpH,MAAMT,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAC,sBAAsBM,QAAQ,SAASR,IAAI,SAASC,IAAI,EAAE,CAAC;IAC1F,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDe,eAAe,EAAE,MAAAA,CAAOT,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAA6D;IACpG,MAAMT,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAC,uBAAuBF,IAAI,SAASC,IAAI,EAAE,CAAC;IAC1E,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDgB,YAAY,EAAE,MAAAA,CAAON,EAAU,EAAEO,MAAc,KAAuB;IAClE,MAAMnB,QAAQ,GAAG,MAAMnB,GAAG,CAACuC,GAAG,CAAU,aAAaR,EAAE,kBAAkBO,MAAM,EAAE,CAAC;IAClF,OAAOnB,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDmB,MAAM,EAAE,MAAOT,EAAU,IAAoB;IACzC,MAAM/B,GAAG,CAACwC,MAAM,CAAC,aAAaT,EAAE,EAAE,CAAC;EACvC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,QAAQ,GAAG;EACpBC,IAAI,EAAE,MAAAA,CAAOC,UAAkB,EAAEC,OAAe,EAAEC,SAAkB,KAAuB;IACvF,MAAM1B,QAAQ,GAAG,MAAMnB,GAAG,CAACe,IAAI,CAAU,WAAW,EAAE;MAClD4B,UAAU;MACVC,OAAO;MACPC;IACJ,CAAC,CAAC;IACF,OAAO1B,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDK,MAAM,EAAE,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAA6D;IAC3F,MAAMT,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAC,kBAAkBF,IAAI,SAASC,IAAI,EAAE,CAAC;IACrE,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC;EACDyB,eAAe,EAAE,MAAOC,MAAc,IAAyB;IAC3D,MAAM5B,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAY,0BAA0BkB,MAAM,EAAE,CAAC;IAC7E,OAAO5B,QAAQ,CAACE,IAAI;EACxB,CAAC;EACD2B,UAAU,EAAE,MAAOC,SAAiB,IAAoB;IACpD,MAAMjD,GAAG,CAACuC,GAAG,CAAC,aAAaU,SAAS,OAAO,CAAC;EAChD,CAAC;EACDC,cAAc,EAAE,MAAAA,CAAA,KAA6B;IACzC,MAAM/B,QAAQ,GAAG,MAAMnB,GAAG,CAAC6B,GAAG,CAAS,wBAAwB,CAAC;IAChE,OAAOV,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC;AAED,eAAerB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}